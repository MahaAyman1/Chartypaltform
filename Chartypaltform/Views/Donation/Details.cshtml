@model Campaign
@using System.Security.Claims

@{
    ViewData["Title"] = "Campaign Details";
    ViewBag.ShowHeroSection = true;
}

<script src="https://www.paypal.com/sdk/js?client-id=@(ViewBag.PaypalClientId)&currency=USD" async defer></script>

<div class="campaign-details container mt-5">
    <div class="row">
        <div class="col-md-6">
            <img src="@Model.CampaignImg" alt="Image of @Model.CampaignName" class="img-fluid rounded shadow">
        </div>
        <div class="col-md-6">
            <h1 class="display-4">@Model.CampaignName</h1>
            <p class="lead">@Model.CampaignDes</p>
            <p><strong>Amount Raised: </strong> $@Model.CurrentAmountRaised</p>
            <p><strong>Goal Amount: </strong> $@Model.GoalAmount</p>
        </div>
    </div>
</div>

<div class="donation-container container mt-5 p-4 rounded border shadow-lg" style="max-width: 500px;">
    <h2 class="text-center mb-4">Complete Your Donation</h2>

    <div class="form-group mb-3">
        <label for="totalAmount" class="form-label">Donation Amount ($)</label>
        <input type="number" id="totalAmount" class="form-control" step="0.01" placeholder="Enter amount" aria-describedby="amountHelp">
        <small id="amountHelp" class="form-text text-muted">Minimum donation is $1.</small>
    </div>

    <div id="notification-container"></div> 
    <div id="paypal-button-container" class="text-center"></div> 
</div>

<script>
    function loadPayPalButtons() {
        paypal.Buttons({
            style: {
                layout: 'vertical',
                color: 'gold',
                shape: 'rect',
                label: 'pay'
            },
            createOrder: async function (data, actions) {
                const totalAmount = parseFloat(document.getElementById("totalAmount").value);
                const campaignId = @Model.CampaignId;
                const donorId = '@User.FindFirstValue(ClaimTypes.NameIdentifier)';

                // Validate input
                if (!totalAmount || totalAmount < 1) {
                    alert('Please enter a valid amount above $1.');
                    return;
                }

                try {
                    const response = await fetch("@Url.Action("CreateOrder", "Donation")", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ amount: totalAmount, campaignId, donorId })
                    });

                    const order = await response.json();
                    if (order.error) throw new Error(order.error);
                    return order.id;
                } catch (error) {
                    console.error("Error creating order:", error);
                    alert('Failed to create order. Please try again later.');
                }
            },
            onApprove: async function (data) {
                try {
                    const response = await fetch("@Url.Action("CompleteOrder", "Donation")", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ amount: parseFloat(document.getElementById("totalAmount").value), orderID: data.orderID, campaignId: @Model.CampaignId, donorId: '@User.FindFirstValue(ClaimTypes.NameIdentifier)' })
                    });

                    const details = await response.json();
                    const notificationContainer = document.getElementById("notification-container");

                    if (details === "success") {
                        notificationContainer.innerHTML = `
                                <div class="alert alert-success alert-dismissible fade show" role="alert">
                                    <strong>Thank you!</strong> Your donation was successful.
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>`;
                    } else {
                        notificationContainer.innerHTML = `
                                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                    <strong>Oops!</strong> There was an issue with your donation.
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>`;
                    }
                } catch (error) {
                    console.error("Error completing order:", error);
                    alert('An error occurred. Please try again later.');
                }
            },
            onError: function (err) {
                console.error(err);
                alert('An error occurred. Please try again later.');
            }
        }).render('#paypal-button-container');
    }

    window.onload = loadPayPalButtons;
</script>
